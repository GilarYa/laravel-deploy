name: Deploy to CPanel
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Deployment type'
        required: true
        default: 'incremental'
        type: choice
        options:
        - incremental
        - full
jobs:
  FTP-Deploy-Action:
    name: FTP-Deploy-Action
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better diff detection
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Build assets
      run: |
        npm install
        npm run build

    - name: Install PHP and Composer
      uses: shivammathur/setup-php@v2
      with:
          php-version: '8.2' # Adjust to match the PHP version used by your Laravel project
          tools: 'composer'

    - name: Install PHP dependencies
      run: composer install --no-dev --optimize-autoloader
        
    - name: Prepare deployment files
      run: |
        # Remove files that shouldn't be deployed
        rm -rf .git/
        rm -rf node_modules/
        rm -rf tests/
        rm -f .env.example
        rm -f phpunit.xml
        rm -f README.md
        rm -f .gitignore
        rm -f .editorconfig
        rm -f vite.config.js
        rm -f package*.json
        rm -f composer.lock

        # Clear Laravel caches
        rm -rf storage/logs/*
        rm -rf storage/framework/cache/data/*
        rm -rf storage/framework/sessions/*
        rm -rf storage/framework/views/*
        rm -rf bootstrap/cache/*.php

        # Create necessary directories with proper permissions
        mkdir -p storage/logs
        mkdir -p storage/framework/cache/data
        mkdir -p storage/framework/sessions
        mkdir -p storage/framework/views
        mkdir -p bootstrap/cache

    - name: Determine deployment mode
      id: deploy_mode
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          DEPLOY_TYPE="${{ github.event.inputs.deployment_type }}"
        else
          DEPLOY_TYPE="incremental"
        fi

        echo "deployment_type=$DEPLOY_TYPE" >> $GITHUB_OUTPUT
        echo "üöÄ Deployment mode: $DEPLOY_TYPE"

    - name: Smart Incremental Deploy with Server Sync
      id: incremental_deploy
      if: steps.deploy_mode.outputs.deployment_type == 'incremental'
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_wait_seconds: 20
        command: |
          # Install lftp
          sudo apt-get update && sudo apt-get install -y lftp

          echo "üîç Performing smart sync - checking server state first..."

          # Use lftp mirror with --only-newer flag for intelligent sync
          lftp -e "
          set ftp:ssl-allow no;
          set ftp:passive-mode on;
          set net:timeout 60;
          set net:max-retries 3;
          open ftp://${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@${{ secrets.SERVER }};
          cd /public_html/;
          lcd ./;

          # Smart mirror: sync with server (including deletions)
          echo \"üîÑ SYNC MODE: Server will match Git repository exactly\"
          echo \"‚ö†Ô∏è Files removed from Git will be deleted from server\"

          mirror --reverse --only-newer --delete --verbose --parallel=2 \
            --exclude-glob='.git*' \
            --exclude-glob='node_modules*' \
            --exclude-glob='tests*' \
            --exclude-glob='*.md' \
            --exclude-glob='package*.json' \
            --exclude-glob='composer.lock' \
            --exclude-glob='.env*' \
            --exclude-glob='phpunit.xml' \
            --exclude-glob='README*' \
            --exclude-glob='.github*' \
            ./ ./;
          quit
          "

          echo "‚úÖ Smart incremental deployment completed!"



    - name: Full FTP Deploy
      if: steps.deploy_mode.outputs.deployment_type == 'full'
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 20
        max_attempts: 2
        retry_wait_seconds: 60
        command: |
          # Install lftp
          sudo apt-get update && sudo apt-get install -y lftp

          # Full deployment with lftp
          lftp -e "
          set ftp:ssl-allow no;
          set ftp:passive-mode on;
          set net:timeout 120;
          set net:max-retries 3;
          open ftp://${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@${{ secrets.SERVER }};
          cd /public_html/;
          lcd ./;
          mirror --reverse --delete --verbose --parallel=1 ./ ./;
          quit
          "

    - name: Deployment Summary
      if: always()
      run: |
        if [ "${{ steps.deploy_mode.outputs.deployment_type }}" = "full" ]; then
          echo "‚úÖ Full deployment completed!"
          echo "üîÑ Future pushes will only deploy changed files."
        else
          echo "‚úÖ Smart incremental deployment completed!"
          echo "üìÅ Only newer/changed files were uploaded."
          echo "üóëÔ∏è Files removed from Git were deleted from server."
        fi
        echo "üéØ Server is now 100% synchronized with Git repository."