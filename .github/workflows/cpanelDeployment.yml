name: Deploy to CPanel
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Deployment type'
        required: true
        default: 'incremental'
        type: choice
        options:
        - incremental
        - full
        - force_all_php
      force_upload:
        description: 'Force upload all PHP files (if auto-detection fails)'
        required: false
        default: 'false'
        type: choice
        options:
        - 'false'
        - 'true'
jobs:
  FTP-Deploy-Action:
    name: FTP-Deploy-Action
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Get last 2 commits for diff
    # Skip build steps - just sync files directly

    - name: Determine deployment mode
      id: deploy_mode
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          DEPLOY_TYPE="${{ github.event.inputs.deployment_type }}"
        else
          DEPLOY_TYPE="incremental"
        fi

        echo "deployment_type=$DEPLOY_TYPE" >> $GITHUB_OUTPUT
        echo "🚀 Deployment mode: $DEPLOY_TYPE"

    - name: Smart Server Sync
      id: sync_deploy
      if: steps.deploy_mode.outputs.deployment_type == 'incremental'
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_wait_seconds: 20
        command: |
          # Install lftp
          sudo apt-get update && sudo apt-get install -y lftp

          echo "🔍 Simple File Sync - Only sync changed files..."
          echo "📋 Will upload newer/different files and delete removed files"
          echo "⚡ Excluding only: vendor/ (already exists on server)"
          echo "✅ Syncing all other files as-is"

          # Create minimal exclude file - only exclude vendor
          cat > .lftp_exclude << 'EOF'
          vendor/
          vendor/*
          .git/
          .git/*
          .github/
          .github/*
          EOF

          # Use lftp mirror with intelligent comparison
          lftp -e "
          set ftp:ssl-allow no;
          set ftp:passive-mode on;
          set net:timeout 60;
          set net:max-retries 3;
          set net:reconnect-interval-base 5;
          open ftp://${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@${{ secrets.SERVER }};
          cd /public_html/;
          lcd ./;

          echo 'Starting simple file sync...';
          echo 'Excluding only vendor/ folder, syncing everything else...';

          # Simple mirror - sync all files except vendor
          mirror --reverse --only-newer --delete --verbose --parallel=2 --exclude-glob-from=.lftp_exclude ./ ./;

          echo 'Sync completed!';
          quit
          "

          # Cleanup exclude file
          rm -f .lftp_exclude

          echo "✅ Smart server sync completed!"



    - name: Full File Sync
      if: steps.deploy_mode.outputs.deployment_type == 'full'
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 15
        max_attempts: 2
        retry_wait_seconds: 30
        command: |
          # Install lftp
          sudo apt-get update && sudo apt-get install -y lftp

          echo "🚀 Full file sync - uploading all files except vendor..."

          # Create minimal exclude for full sync too
          cat > .lftp_exclude << 'EOF'
          vendor/
          vendor/*
          .git/
          .git/*
          .github/
          .github/*
          EOF

          # Full sync with lftp
          lftp -e "
          set ftp:ssl-allow no;
          set ftp:passive-mode on;
          set net:timeout 120;
          set net:max-retries 3;
          open ftp://${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@${{ secrets.SERVER }};
          cd /public_html/;
          lcd ./;
          echo 'Starting full sync (excluding vendor)...';
          mirror --reverse --delete --verbose --parallel=1 --exclude-glob-from=.lftp_exclude ./ ./;
          quit
          "

          # Cleanup
          rm -f .lftp_exclude

    - name: Deployment Summary
      if: always()
      run: |
        if [ "${{ steps.deploy_mode.outputs.deployment_type }}" = "full" ]; then
          echo "✅ Full deployment completed!"
          echo "🔄 Future pushes will only deploy changed files."
        elif [ "${{ steps.changes.outputs.has_changes }}" = "true" ]; then
          echo "✅ Selective deployment completed!"
          echo "� Uploaded: $(echo '${{ steps.changes.outputs.changed_files }}' | wc -l) files"
          echo "🗑️ Deleted: $(echo '${{ steps.changes.outputs.deleted_files }}' | wc -l) files"
          echo "⚡ Only changed files were processed - no unnecessary transfers!"
        else
          echo "ℹ️ No deployment needed - no relevant files changed."
        fi
        echo "🎯 Server synchronized with Git repository."