name: Publish Website to CPanel (Robust)
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  FTP-Deploy-Action:
    name: FTP-Deploy-Action
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2 
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Build assets
      run: |
        npm ci
        npm run build

    - name: Install PHP and Composer
      uses: shivammathur/setup-php@v2
      with:
          php-version: '8.2'
          tools: 'composer'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install PHP dependencies
      run: composer install --no-dev --optimize-autoloader --no-interaction
      
    - name: Create deployment package
      run: |
        # Remove development files
        rm -rf tests/
        rm -rf .git/
        rm -f .env.example
        rm -f phpunit.xml
        rm -f README.md
        
        # Clear Laravel caches
        rm -rf storage/logs/*
        rm -rf storage/framework/cache/data/*
        rm -rf storage/framework/sessions/*
        rm -rf storage/framework/views/*
        rm -rf bootstrap/cache/*.php
        
        # Create necessary directories
        mkdir -p storage/logs
        mkdir -p storage/framework/cache/data
        mkdir -p storage/framework/sessions
        mkdir -p storage/framework/views
        mkdir -p bootstrap/cache
        
        # Set permissions
        chmod -R 755 storage/
        chmod -R 755 bootstrap/cache/
        
    - name: FTP Deploy with Retry
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 15
        max_attempts: 3
        retry_wait_seconds: 30
        command: |
          npx ftp-deploy --server="${{ secrets.SERVER }}" \
            --username="${{ secrets.USERNAME }}" \
            --password="${{ secrets.PASSWORD }}" \
            --local-dir="./" \
            --server-dir="/public_html/" \
            --exclude="node_modules/**,vendor/**,.git/**,.env,.env.example" \
            --delete-remote \
            --verbose
